sensor:
  - platform: pulse_counter
    pin: ${WIND_SPEED_PIN}
    unit_of_measurement: 'mph'
    device_class: wind_speed
    filters:
      - multiply: 0.0249
    name: "Wind Speed"
  - platform: pulse_counter
    pin: ${RAIN_PULSE_PIN}
    unit_of_measurement: 'in/h'
    device_class: precipitation_intensity
    name: "Rainfall Intensity"
    accuracy_decimals: 3
    filters:
      - lambda: return x * 0.011 * 60;
    total:
      name: "Rainfall Total"
      accuracy_decimals: 3
      unit_of_measurement: 'in'
      device_class: precipitation
      filters:
        - lambda: return x * 0.011;
  - platform: adc
    id: wind_direction_source
    pin: ${WIND_DIRECTION_PIN}
    update_interval: 10s
    attenuation: 11db
  - platform: resistance
    sensor: wind_direction_source
    id: wind_direction_resistance
    configuration: DOWNSTREAM
    resistor: 10kOhm
    on_value:
      then:
        - component.update: wind_direction

text_sensor:
  - platform: template
    update_interval: never
    id: wind_direction
    lambda: |-
      const int MARGIN = 1000,
                N = 33000,
                NNE = 6570,
                NE = 8200,
                ENE = 891,
                E = 1000,
                ESE = 688,
                SE = 2200,
                SSE = 1410,
                S = 3900,
                SSW = 3140,
                SW = 16000,
                WSW = 14120,
                W = 120000,
                WNW = 42120,
                NW = 64900,
                NNW = 21880;
      float res = id(wind_direction_resistance).state;
      String direction = "";
      if ((res > N - MARGIN) && (res < N + MARGIN))
        return {"N"};
      else if ((res > NE - MARGIN) && (res < NE + MARGIN))
        return {"NE"};
      else if ((res > E - MARGIN) && (res < E + MARGIN))
        return {"E"};
      else if ((res > SE - MARGIN) && (res < SE + MARGIN))
        return {"SE"};
      else if ((res > S - MARGIN) && (res < S + MARGIN))
        return {"S"};
      else if ((res > SW - MARGIN) && (res < SW + MARGIN))
        return {"SW"};
      else if ((res > W - MARGIN) && (res < W + MARGIN))
        return {"W"};
      else if ((res > NW - MARGIN) && (res < NW + MARGIN))
        return {"NW"};
      else if ((res > NNE - MARGIN) && (res < NNE + MARGIN))
        return {"NNE"};
      else if ((res > ENE - MARGIN) && (res < ENE + MARGIN))
        return {"ENE"};
      else if ((res > ESE - MARGIN) && (res < ESE + MARGIN))
        return {"ESE"};
      else if ((res > SSE - MARGIN) && (res < SSE + MARGIN))
        return {"SSE"};
      else if ((res > SSW - MARGIN) && (res < SSW + MARGIN))
        return {"SSW"};
      else if ((res > WSW - MARGIN) && (res < WSW + MARGIN))
        return {"WSW"};
      else if ((res > WNW - MARGIN) && (res < WNW + MARGIN))
        return {"WNW"};
      else if ((res > NNW - MARGIN) && (res < NNW + MARGIN))
        return {"NNW"};
      else return {"Unknown"};